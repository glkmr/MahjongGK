
Das war der Versuch mit ChatGPT eine komplexere Form zu entwickeln.
Es lief gut an, ein einigermaßen funktionsfähiges Pogramm war schnell erstellt.

Doch dann klemmte es zusehends: Die Anpassung der Feinheiten klappte nicht.
Ich bin im Thema der Grafikbearbeitung nicht genügend drin um wirklich genaue
Vorgaben zu machen, wie meine Vorstellungen umgesetzt werden können, woran es
letztendlich scheiterte.

Es wird gehen, wenn ich mich in das Thema eingearbeitet habe, das stelle ich aber hinten an.

Zum Ausprobieren in UCtlSpielfeld im Bereich "TestCode" folgenden Code eingeben:
   
   Using tst As New MahjongGKSymbolFactory.TileStyleTuner
         tst.ShowDialog()
   End Using

Das ist der bisher umfangreichste Codeblock, den ich mit ChatGPT entwickelt habe und es 
betätigt sich meine bisherige Erfahrung:

1.) Klare Ankündigung "Themenwechsel" mit klarer Zielvorgabe "Ich benötige ..."
    und unmissverständlicher Beschreibung. Bei Funktionen und Methoden mit den Übergaben, den
    zur Verfügung stehender Funktionen, Methoden, Eigenschaften, Feldern, Werten, Enumerationen.
2.) Im Thema bleiben und zwar zielgerichtet und hochkonzentriert, bis es komplett durch ist. 
    (für Themenfremdes zwischendurch zweiten Account auf dem Laptop benutzen.)
3.) Unterthemen systematisch abarbeiten. Nicht zwischen Unterthemen hin und her springen. 
4.) Anweisungen klar und eindeutig formulieren. Auf Rechtschreibung achten. 
5.) Im Hinterkopf behalten, daß das Gedächtnis von ChatGPT "kurz" ist und Wissen
    "hinten rausfällt" und dann weg ist. Damit verliert ChatGPT den Überblick und der erzeugte Code
    wird schlechter bis unbrauchbar. Also: Nicht schwafeln, zielgerichtet arbeiten.
6.) ChatGPT programmiert in C# und übersetzt dann nach Vb.Net, wobei Feinheiten falsch
    übesetzt werden. Nichts schlimmes, ChatGPT korrigiert auch, wenn man nachhakt: "die IDE
    meckert bei ..." aber es lenkt die KI ab. Besser ist, man ist im VB-Syntax sattelfest. 

    Ich benutze den kostenpflichtigen Account für Einzelpersonen.
----------------------------------------------------------------------------------------
Hier nur die Anleitung, wie und wo Werte der Structure TileStyle erweitert werden können:

1) TileStyle erweitern (+ Defaults)

Füge diese Felder in deine TileStyle-Struktur ein und setze Defaults in CreateDefault:

' — Kantenabrundung: Richtung & Krümmung —
Public RoundoverAngleDeg As Single   ' Lichtwinkel in Grad (−90..+90, negativ = oben/links)
Public RoundoverCurve As Single      ' Krümmungs-Exponent (1.0..2.0), höher = „runder“

' in CreateDefault(surfaceSize):
.RoundoverAngleDeg = -35.0F,
.RoundoverCurve = 1.25F

2) INI-Brücke (TileRenderSettings) erweitern
a) Properties
Public Property RoundoverAngleDeg As Single = -35.0F
Public Property RoundoverCurve As Single = 1.25F

b) Laden/Speichern
' LoadFromIni:
RoundoverAngleDeg = ini.ReadSingle(section, "RoundoverAngleDeg", RoundoverAngleDeg)
RoundoverCurve    = ini.ReadSingle(section, "RoundoverCurve",    RoundoverCurve)

' SaveToIni:
ini.WriteString(section, "RoundoverAngleDeg", RoundoverAngleDeg.ToString(Globalization.CultureInfo.InvariantCulture))
ini.WriteString(section, "RoundoverCurve",    RoundoverCurve.ToString(Globalization.CultureInfo.InvariantCulture))

c) In ToTileStyle
st.RoundoverAngleDeg = RoundoverAngleDeg
st.RoundoverCurve    = RoundoverCurve

'################################
Hinweis für mich: 
Der komplette Dialog mit ChatGPT ist in "NotePad/Visual Basic/Mahjong/TileStyleTuner 01" gespeichert.